{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","app.js","index.js"],"names":["Counter","className","this","getBadgedClases","formatCount","onClick","props","onIncrement","counter","id","onDecrement","onDelete","classes","value","Component","Counters","onReset","onAdd","counters","map","key","NavBar","totalCounters","class","href","App","handleReset","updatedCounters","state","setState","handleIncrement","counterId","handleDecrement","handleDelete","filter","i","handleAdd","newCounter","length","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8338385.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3 col-sm-1\">\r\n          <span className={this.getBadgedClases()}>{this.formatCount()}</span>\r\n        </div>\r\n        <div className=\"col-3 col-sm-1\">\r\n          <button\r\n            className=\"btn btn-secondary btn-sm m-2\"\r\n            onClick={() => this.props.onIncrement(this.props.counter.id)}\r\n          >\r\n            {\" \"}\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"col-3 col-sm-1\">\r\n          <button\r\n            className=\"btn btn-secondary btn-sm m-2\"\r\n            onClick={() => this.props.onDecrement(this.props.counter.id)}\r\n          >\r\n            {\" \"}\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className=\"col-3 col-sm-1\">\r\n          <button\r\n            className=\"btn btn-danger btn-sm m-2\"\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          >\r\n            {\" \"}\r\n            Delete{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgedClases() {\r\n    let classes = \"badge m-3 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nconst Counters = props => {\r\n  const { onDelete, onIncrement, onDecrement, onReset, onAdd } = props;\r\n  const counters = props.counters.map(counter => (\r\n    <Counter\r\n      key={counter.id}\r\n      counter={counter}\r\n      onDelete={onDelete}\r\n      onIncrement={onIncrement}\r\n      onDecrement={onDecrement}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-success btn-sm m-2\" onClick={onAdd}>\r\n        Add\r\n      </button>\r\n      <button className=\"btn btn-primary btn-sm m-2\" onClick={onReset}>\r\n        Reset\r\n      </button>\r\n      {counters}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n  return (\r\n    <nav class=\"navbar navbar-light bg-light\">\r\n      <a class=\"navbar-brand\" href=\"#\">\r\n        {\" \"}\r\n        Total{\" \"}\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          {totalCounters}\r\n        </span>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Counters from \"./components/counters\";\r\nimport NavBar from \"./components/navbar\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      counters: [{ id: 1, value: 0 }]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\r\n        />\r\n        <main className=\"container\">\r\n          <Counters\r\n            onReset={this.handleReset}\r\n            onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement}\r\n            onDelete={this.handleDelete}\r\n            onAdd={this.handleAdd}\r\n            counters={this.state.counters}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleReset = () => {\r\n    const updatedCounters = this.state.counters.map(counter => {\r\n      counter.value = 0;\r\n      return counter;\r\n    });\r\n    this.setState({ counters: updatedCounters });\r\n  };\r\n\r\n  handleIncrement = counterId => {\r\n    const updatedCounters = this.state.counters.map(counter => {\r\n      counter.id === counterId && counter.value++;\r\n      return counter;\r\n    });\r\n    this.setState({ updatedCounters });\r\n  };\r\n\r\n  handleDecrement = counterId => {\r\n    const updatedCounters = this.state.counters.map(counter => {\r\n      counter.id === counterId && counter.value > 0 && counter.value--;\r\n      return counter;\r\n    });\r\n    this.setState({ updatedCounters });\r\n  };\r\n\r\n  handleDelete = counterId => {\r\n    let updatedCounters = this.state.counters.filter(\r\n      counter => counter.id !== counterId\r\n    );\r\n    let i = 1;\r\n    updatedCounters.map(counter => {\r\n      counter.id = i;\r\n      i++;\r\n      return counter;\r\n    });\r\n\r\n    this.setState({ counters: updatedCounters });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    let newCounter;\r\n    if (this.state.counters.length === 0) {\r\n      newCounter = {\r\n        id: 1,\r\n        value: 0\r\n      };\r\n    } else {\r\n      const newId = this.state.counters.length + 1;\r\n      newCounter = {\r\n        id: newId,\r\n        value: 0\r\n      };\r\n    }\r\n    let updatedCounters = [...this.state.counters];\r\n    updatedCounters[newCounter.id - 1] = newCounter;\r\n    this.setState({ counters: updatedCounters });\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}